// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// admin models

model User {
  id       Int    @id @default(autoincrement())
  username String
  password String
  roleId   Int
  role     Role   @relation(fields: [roleId], references: [id])

  mhsId     Int?
  mahasiswa Mahasiswa? @relation(fields: [mhsId], references: [id])

  dosenId   Int?
  dosen     Dosen?   @relation(fields: [dosenId], references: [id])
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt()
}

model Role {
  id        Int      @id @default(autoincrement())
  roleName  String   @unique
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt()

  User User[]
}

model Dosen {
  id          Int           @id @default(autoincrement())
  nip         String        @unique
  dosenName   String        @unique
  matkulId    Int
  matkul      Matkul        @relation(fields: [matkulId], references: [id])
  createdAt   DateTime      @default(now())
  updateAt    DateTime      @updatedAt()
  User        User[]
  Tugas       Tugas[]
  AcaraBerita AcaraBerita[]
}

model Matkul {
  id         Int      @id @default(autoincrement())
  code       String   @unique
  namaMatkul String   @unique
  jmlSks     Int
  semester   Int
  dosen      Dosen[]
  createdAt  DateTime @default(now())
  updateAt   DateTime @updatedAt()
}

model Mahasiswa {
  id      Int       @id @default(autoincrement())
  mhsName String
  nim     String    @unique
  absensi Absensi[]

  createdAt  DateTime     @default(now())
  updateAt   DateTime     @updatedAt()
  User       User[]
  NilaiAkhir NilaiAkhir?
    Jawaban Jawaban[]

}

model AcaraBerita {
  id          Int      @id @default(autoincrement())
  dosenId     Int
  pertemuanKe Int
  dosen       Dosen    @relation(fields: [dosenId], references: [id])
  date        DateTime
  jamMasuk    Int
  jamKeluar   Int
  descMateri  String
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt()
}

model Absensi {
  id Int @id @default(autoincrement())

  pertemuanKe Int 
  mahasiswaId Int
  mahasiswa   Mahasiswa @relation(fields: [mahasiswaId], references: [id])

  statusId   Int
  totalHadir Int

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt()
}

model StatusAbsen {
  id          Int      @id @default(autoincrement())
  statusAbsen String
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt()
}

model NilaiAkhir {
  id           Int       @id @default(autoincrement())
  mhsId        Int @unique
  mahasiswa    Mahasiswa @relation(fields: [mhsId], references: [id])
  totalAbsen   Int
  
  nilaiTugas   Float
  uts          Float
  uas          Float
  absenPercent Float
  tugasPercent Float
  utsPercent   Float
  uasPercent   Float
  angkaMutu    Float
  hurufMutu    String
  ket          String
}

model Tugas {
  id            Int         @id @default(autoincrement())
  judul         String
  dosenId       Int
  dosen         Dosen       @relation(fields: [dosenId], references: [id])
  deskripsi     String
  lampiran      String
  dueDate       DateTime
  topik         String
  statusTugasId Int
  statusTugas   StatusTugas @relation(fields: [statusTugasId], references: [id])

  Jawaban Jawaban[]

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt()
}

model Jawaban {
  jawabanId Int @id @default(autoincrement())
  lampiranJawaban String
  WaktuPengumpulan DateTime
  point Int?
  Tugas Tugas @relation(fields: [TugasID], references: [id])
  TugasID Int
  Mahasiswa Mahasiswa @relation(fields: [MahasiswaID], references: [id])
  MahasiswaID Int
}


model StatusTugas {
  id          Int     @id @default(autoincrement())
  statusTugas String
  tugas       Tugas[]
}
