// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// admin models

model User {
  id       Int    @id @default(autoincrement())
  username String
  password String
  roleId   Int?
  role     Role?  @relation(fields: [roleId], references: [id])

  dosenId   Int?
  dosen     Dosen?   @relation(fields: [dosenId], references: [id])
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt()
}

model Role {
  id        Int      @id @default(autoincrement())
  roleName  String @unique
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt()

  User User[]
}

model Dosen {
  id        Int      @id @default(autoincrement())
  nip       Int @unique
  dosenName String   @unique
  matkulId  Int
  matkul    Matkul   @relation(fields: [matkulId], references: [id])
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt()
  User      User[]
}

model Matkul {
  id         Int      @id @default(autoincrement())
  code       String   @unique
  namaMatkul String   @unique
  jmlSks     Int
  semester   Int
  dosen      Dosen[]
  createdAt  DateTime @default(now())
  updateAt   DateTime @updatedAt()
}

model Mahasiswa {
  id        Int       @id @default(autoincrement())
  mhsName   String    
  nim       Int       @unique
  absensi   Absensi[]

  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt()
}

model AcaraBerita {
  id          Int       @id @default(autoincrement())
  date        DateTime
  jamMasuk    Int
  jamKeluar   Int 
  descMateri  String
  createdAt   DateTime  @default(now())
  updateAt    DateTime  @updatedAt()

}

model Tugas {
  id Int @id @default(autoincrement())
  judul     String
  namaDosen String
  deskripsi String
  lampiran  String
  point     Int
  dueDate   DateTime
  topik     String
  
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt()
}



model Absensi {
  id Int @id @default(autoincrement())

  mahasiswaId Int
  mahasiswa   Mahasiswa @relation(fields: [mahasiswaId], references: [id])

  statusId   Int
  totalHadir Int

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt()
}

model Status {
  id         Int    @id @default(autoincrement())
  statusName String
}

model NilaiAkhir {
    id         Int    @id @default(autoincrement())
  totalAbsen Int 
  nilaiTugas Float
  uts Float
  uas Float
  absenPercent Float
  tugasPercent Float
  utsPercent Float
  uasPercent Float
  angkaMutu Float
  hurufMutu String
  ket String

}